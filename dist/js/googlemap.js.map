{"version":3,"sources":["googlemap.js"],"names":["define","mapapi","Marker","map","self","this","_map","_marker","undefined","event","click","cb","addListener","mouseOver","mouseOut","trigger","google","maps","Bounds","_bounds","InfoWindow","_infoWindow","close","GoogleMap","create","container","opts","Map","resize","marker","bounds","infoWindow","prototype","setMap","animation","setAnimation","Animation","DROP","show","setVisible","hide","addIcon","icon","setIcon","url","scaledSize","Size","removeIcon","bounce","time","DURATION_PER_BOUNCE","BOUNCE","setTimeout","bind","sw","ne","LatLngBounds","extend","latlng","fit","fitBounds","open","anchor"],"mappings":"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","file":"googlemap.js","sourcesContent":["define([\n  'mapapi',\n], function(mapapi) {\n  'use strict';\n\n  /* =======================================================================\n   =================================== Marker\n   ========================================================================= */\n  /**\n   * A marker to pinpoint a position on the map.\n   *\n   * @class\n   * @param {google.maps.Map} map - The map to set the marker on.\n   */\n  function Marker(map) {\n    var self = this;\n\n    self._map = map;\n    self._marker = undefined;\n\n    self.event = {\n      click: function(cb) {\n        self._marker.addListener('click', cb);\n        return self.event;\n      },\n      mouseOver: function(cb) {\n        self._marker.addListener('mouseover', cb);\n        return self.event;\n      },\n      mouseOut: function(cb) {\n        self._marker.addListener('mouseout', cb);\n        return self.event;\n      },\n    };\n\n    self.trigger = {\n      click: function() {\n        google.maps.event.trigger(self._marker, 'click');\n      },\n      mouseOver: function() {\n        google.maps.event.trigger(self._marker, 'mouseover');\n      },\n      mouseOut: function() {\n        google.maps.event.trigger(self._marker, 'mouseout');\n      },\n    };\n  }\n\n  /**\n   * Create a marker.\n   *\n   * @param {?Object} [opts] - The options to create a marker with.\n   * @see {@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#MarkerOptions}\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.create = function(opts) {\n    this._marker = new google.maps.Marker(opts || null);\n    this._marker.setMap(this._map);\n    if (opts && opts.animation) {\n      this._marker.setAnimation(google.maps.Animation.DROP);\n    }\n    return this;\n  };\n\n  /**\n   * Set the visibility of the marker.\n   *\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.show = function() {\n    this._marker.setVisible(true);\n    return this;\n  };\n\n  /**\n   * Remove the visibility of the marker.\n   *\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.hide = function() {\n    this._marker.setVisible(false);\n    return this;\n  };\n\n  /**\n   * Change the default marker icon.\n   *\n   * @param {string} [icon=https://maps.google.com/mapfiles/ms/icons/blue-dot.png] - The marker icon URL.\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.addIcon = function(icon) {\n    icon = icon || 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png';\n    this._marker.setIcon({\n      url: icon,\n      scaledSize: new google.maps.Size(40, 40),\n    });\n    return this;\n  };\n\n  /**\n   * Set the default marker icon.\n   *\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.removeIcon = function() {\n    this._marker.setIcon(null);\n    return this;\n  };\n\n  /**\n   * Animate the marker with a bounce effect.\n   *\n   * @param {number} [time=2] - The number of time the marker bounces.\n   * @return {Marker} The current `Marker` instance.\n   */\n  Marker.prototype.bounce = function(time) {\n    var DURATION_PER_BOUNCE = 700;\n    time = time ? DURATION_PER_BOUNCE * time : DURATION_PER_BOUNCE * 2;\n    this._marker.setAnimation(google.maps.Animation.BOUNCE);\n    setTimeout((function() {\n      this._marker.setAnimation(null);\n    }).bind(this), time);\n    return this;\n  };\n\n  /* =======================================================================\n   =================================== Bounds\n   ========================================================================= */\n  /**\n   * A latlng bound object to set the map viewport to contain markers.\n   *\n   * @class\n   * @param {google.maps.Map} map - The map to bound the markers on.\n   */\n  function Bounds(map) {\n    this._map = map;\n    this._bounds = undefined;\n  }\n\n  /**\n   * Create a [google.maps.LatLngBounds]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#LatLngBounds} instance.\n   *\n   * @param {?Object} [sw] - The southwest latitude and longitude.\n   * @param {?Object} [ne] - The northeast latitude and longitude.\n   * @return {Bounds} The current `Bounds` instance.\n   */\n  Bounds.prototype.create = function(sw, ne) {\n    this._bounds = new google.maps.LatLngBounds(sw || null, ne || null);\n    return this;\n  };\n\n  /**\n   * Extend the bounding area.\n   *\n   * @param {Object} latlng - The latitude and longitude.\n   * @return {Bounds} The current `Bounds` instance.\n   */\n  Bounds.prototype.extend = function(latlng) {\n    this._bounds.extend(latlng);\n    return this;\n  };\n\n  /**\n   * Contain the markers inside the map viewport.\n   *\n   * @return {Bounds} The current `Bounds` instance.\n   */\n  Bounds.prototype.fit = function() {\n    this._map.fitBounds(this._bounds);\n    return this;\n  };\n\n  /* =======================================================================\n   =================================== InfoWindow\n   ========================================================================= */\n  /**\n   * An information window for a specific position.\n   *\n   * @class\n   * @param {google.maps.Map} map - The map to display the info windows on.\n   */\n  function InfoWindow(map) {\n    var self = this;\n\n    self._map = map;\n    self._infoWindow = undefined;\n\n    self.event = {\n      close: function(cb) {\n        self._infoWindow.addListener('closeclick', cb);\n        return self.event;\n      },\n    };\n\n    self.trigger = {\n      close: function() {\n        google.maps.event.trigger(self._infoWindow, 'closeclick');\n      },\n    };\n  }\n\n  /**\n   * Create an infoWindow.\n   *\n   * @param {?Object} [opts] - The options to create an infoWindow with.\n   * @see {@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoWindowOptions}\n   * @return {InfoWindow} The current `InfoWindow` instance.\n   */\n  InfoWindow.prototype.create = function(opts) {\n    this._infoWindow = new google.maps.InfoWindow(opts || null);\n    return this;\n  };\n\n  /**\n   * Open the infoWindow on the map.\n   *\n   * @param {*} anchor - The anchor to attach the infoWindow to. Consult the [`open` method of `InfoWindow` class]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#InfoWindow}.\n   * @return {InfoWindow} The current `InfoWindow` instance.\n   */\n  InfoWindow.prototype.open = function(anchor) {\n    this._infoWindow.open(this._map, anchor || null);\n    return this;\n  };\n\n  /**\n   * Close the infoWindow.\n   *\n   * @return {InfoWindow} The current `InfoWindow` instance.\n   */\n  InfoWindow.prototype.close = function() {\n    this._infoWindow.close();\n    return this;\n  };\n\n  /* =======================================================================\n   =================================== GoogleMap\n   ========================================================================= */\n  /**\n   * A [Google Map]{@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#Map} instance.\n   *\n   * @class\n   */\n  function GoogleMap() {\n    var self = this;\n\n    self._map = undefined;\n\n    /**\n     * Create a map.\n     *\n     * @param {Object} container - The DOM element to place a map in.\n     * @param {?Object} [opts] - The options to create a map with.\n     * @see {@link https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapOptions}\n     * @return {GoogleMap} The current `GoogleMap` instance.\n     */\n    self.create = function(container, opts) {\n      self._map = new google.maps.Map(container, opts || null);\n      return self;\n    };\n\n    self.trigger = {\n      resize: function() {\n        google.maps.event.trigger(self._map, 'resize');\n      },\n    };\n\n    /**\n     * A [Marker]{@link Marker} object.\n     *\n     * @return {Marker} The new `Marker` instance.\n     */\n    self.marker = function() {\n      return new Marker(self._map);\n    };\n\n    /**\n     * A [Bounds]{@link Bounds} object.\n     *\n     * @return {Bounds} The new `Bounds` instance.\n     */\n    self.bounds = function() {\n      return new Bounds(self._map);\n    };\n\n    /**\n     * An [InfoWindow]{@link InfoWindow} object.\n     *\n     * @return {InfoWindow} The new `InfoWindow` instance.\n     */\n    self.infoWindow = function() {\n      return new InfoWindow(self._map);\n    };\n  }\n\n  return GoogleMap;\n});\n"]}