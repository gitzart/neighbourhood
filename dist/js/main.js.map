{"version":3,"sources":["main.js"],"names":["require","config","paths","jquery","knockout","mapapi","onError","err","google","requireType","$","empty","addClass","append","appendTo","ko","LocationViewModel","window","localStorage","getItem","destinations","utils","parseJson","applyBindings","getJSON","done","data","status","xhr","locations","length","console","log","fail","error"],"mappings":"AAAAA,QAAQC,QACNC,OACEC,QACE,iEACA,cAEFC,UACE,qEACA,gBAEFC,OAAQ,6GAKZL,QAAQM,QAAU,SAASC,GAWzB,KATsB,mBAAXC,SAA8C,gBAApBD,EAAIE,cACvCC,EAAE,eAAeC,QACjBD,EAAE,UACCE,SAAS,iCACTC,OAAO,+CACPA,OAAO,sCACPA,OAAO,yCACPC,SAAS,gBAERP,GAGRP,SACE,SACA,WACA,sBACA,oBACC,SAASU,EAAGK,EAAIC,GACjB,YAGA,IAAoD,OAAhDC,OAAOC,aAAaC,QAAQ,gBAA0B,CACxD,GAAIC,GAAeL,EAAGM,MAAMC,UAC1BL,OAAOC,aAAaC,QAAQ,gBAE9BJ,GAAGQ,cAAc,GAAIP,GAAkBI,QAEvCV,GAAEc,QAAQ,kBACPC,KAAK,SAASC,EAAMC,EAAQC,GAC3B,GAAIC,GAAYH,EAAKG,SACI,KAArBA,EAAUC,OACZf,EAAGQ,cAAc,GAAIP,GAAkBa,IAEvCE,QAAQC,IAAI,uBAGfC,KAAK,SAASL,EAAKD,EAAQO,GAG1B,KAFAH,SAAQC,IAAIJ,EAAID,QAChBI,QAAQC,IAAIL,GACNO","file":"main.js","sourcesContent":["require.config({\n  paths: {\n    jquery: [\n      'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min',\n      'lib/jquery',\n    ],\n    knockout: [\n      'https://cdnjs.cloudflare.com/ajax/libs/knockout/3.4.2/knockout-min',\n      'lib/knockout',\n    ],\n    mapapi: 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC_kU9l3eJ20DEPF2qq_XsQcz5ejxwbyns&v=3&callback=define',\n  },\n});\n\n// Error error on the wall, who is the buggiest of them all.\nrequire.onError = function(err) {\n  // Google API error\n  if (typeof google === 'undefined' && err.requireType === 'scripterror') {\n    $('#map-canvas').empty();\n    $('<div/>')\n      .addClass('error mdl-typography--subhead')\n      .append('<i class=\"material-icons\">error_outline</i>')\n      .append('Google Map cannot be accessed!<br>')\n      .append('Check the connection or the firewall.')\n      .appendTo('#map-canvas');\n  }\n  throw err;\n};\n\nrequire([\n  'jquery',\n  'knockout',\n  'viewmodels/location',\n  'extends/handlers',\n], function($, ko, LocationViewModel) {\n  'use strict';\n\n  // If data in localStorage, grab them.\n  if (window.localStorage.getItem('destinations') !== null) {\n    var destinations = ko.utils.parseJson(\n      window.localStorage.getItem('destinations')\n    );\n    ko.applyBindings(new LocationViewModel(destinations));\n  } else {  // Else, reach the server.\n    $.getJSON('/api/data.json')\n      .done(function(data, status, xhr) {\n        var locations = data.locations;\n        if (locations.length !== 0) {\n          ko.applyBindings(new LocationViewModel(locations));\n        } else {\n          console.log('No data is found.');\n        }\n      })\n      .fail(function(xhr, status, error) {\n        console.log(xhr.status);\n        console.log(status);\n        throw error;\n      });\n  }\n});\n"]}